#!/usr/bin/env bash
set -euo pipefail

# changelog prints a nice log of recent git commits.
# Example usage:
# $ changelog "$(git describe --tags --abbrev=0)" (changelog since the last tag)
# $ changelog @^^^ (changelog since 3 commits ago)

GIT_REF="${1:-}"
if [ -z "$GIT_REF" ]; then
	printf "No git ref was passed as the 1st argument. Up to 5 last commits will be used instead" >&2
	changelog="$(git log -n 5 --pretty=format:" - %cs [%aN]: %s")"
else
	changelog="$(git log --pretty=format:" - %cs [%aN]: %s" "$GIT_REF"..HEAD)"
fi

tag_count=$(git tag -l | wc -l | awk '{print $1}')
echo "Repository contains $tag_count tags" >&2
latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "None")

# Add branch info
branch="$(git branch --contains "$GIT_REF" | cut -c 3-)" # " *master" -> "master"
if [ -z "$branch" ]; then
	echo "Branch that contains ref '$GIT_REF' not found"
	exit 1
fi

# Output collected information
echo "Author: $(git log --pretty=format:"%aN <%aE>" HEAD^..HEAD)"
echo "Committer: $(git log --pretty=format:"%cN <%cE>" HEAD^..HEAD)"
echo "Branch: $branch"
echo "Commit: $(git rev-parse --short "$GIT_REF")"
echo "Latest tag: $latest_tag"
echo "Changelog:"
echo "$changelog"
